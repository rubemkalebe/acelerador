$date
  Wed Apr 13 00:19:43 2016
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 32 ! s_input_alu_1a[31:0] $end
$var reg 32 " s_input_alu_1b[31:0] $end
$var reg 32 # s_input_alu_2a[31:0] $end
$var reg 32 $ s_input_alu_2b[31:0] $end
$var reg 32 % s_input_alu_3a[31:0] $end
$var reg 32 & s_input_alu_3b[31:0] $end
$var reg 4 ' s_opcode_alu_1[3:0] $end
$var reg 4 ( s_opcode_alu_2[3:0] $end
$var reg 4 ) s_opcode_alu_3[3:0] $end
$var reg 32 * s_output_alu_1[31:0] $end
$var reg 32 + s_output_alu_2[31:0] $end
$var reg 32 , s_output_alu_3[31:0] $end
$var reg 1 - s_zero_alu_1 $end
$var reg 1 . s_zero_alu_2 $end
$var reg 1 / s_zero_alu_3 $end
$var reg 32 0 s_input_mul_1a[31:0] $end
$var reg 32 1 s_input_mul_1b[31:0] $end
$var reg 1 2 s_op_mul_1 $end
$var reg 32 3 s_output_mul_hi[31:0] $end
$var reg 32 4 s_output_mul_lo[31:0] $end
$var reg 1 5 s_clk $end
$var reg 1 6 s_enable_read $end
$var reg 1 7 s_enable_write $end
$scope module basic_unit_0 $end
$var reg 1 8 clk $end
$var reg 1 9 enable_read $end
$var reg 1 : enable_write $end
$var reg 32 ; input_alu_1a[31:0] $end
$var reg 32 < input_alu_1b[31:0] $end
$var reg 32 = input_alu_2a[31:0] $end
$var reg 32 > input_alu_2b[31:0] $end
$var reg 32 ? input_alu_3a[31:0] $end
$var reg 32 @ input_alu_3b[31:0] $end
$var reg 4 A opcode_alu_1[3:0] $end
$var reg 4 B opcode_alu_2[3:0] $end
$var reg 4 C opcode_alu_3[3:0] $end
$var reg 32 D output_alu_1[31:0] $end
$var reg 32 E output_alu_2[31:0] $end
$var reg 32 F output_alu_3[31:0] $end
$var reg 1 G zero_alu_1 $end
$var reg 1 H zero_alu_2 $end
$var reg 1 I zero_alu_3 $end
$var reg 32 J input_mul_1a[31:0] $end
$var reg 32 K input_mul_1b[31:0] $end
$var reg 1 L op_mul_1 $end
$var reg 32 M output_mul_hi[31:0] $end
$var reg 32 N output_mul_lo[31:0] $end
$var reg 32 O r1_out[31:0] $end
$var reg 32 P r2_out[31:0] $end
$var reg 32 Q r3_out[31:0] $end
$var reg 32 R r4_out_hi[31:0] $end
$var reg 32 S r4_out_lo[31:0] $end
$var reg 32 T s_output_alu_1[31:0] $end
$var reg 32 U s_output_alu_2[31:0] $end
$var reg 32 V s_output_alu_3[31:0] $end
$var reg 32 W s_output_mul_hi[31:0] $end
$var reg 32 X s_output_mul_lo[31:0] $end
$scope module alu1 $end
$var reg 32 Y a[31:0] $end
$var reg 32 Z b[31:0] $end
$var reg 4 [ opcode[3:0] $end
$var reg 1 \ zero $end
$var reg 32 ] x[31:0] $end
$var reg 32 ^ aux[31:0] $end
$upscope $end
$scope module alu2 $end
$var reg 32 _ a[31:0] $end
$var reg 32 ` b[31:0] $end
$var reg 4 a opcode[3:0] $end
$var reg 1 b zero $end
$var reg 32 c x[31:0] $end
$var reg 32 d aux[31:0] $end
$upscope $end
$scope module alu3 $end
$var reg 32 e a[31:0] $end
$var reg 32 f b[31:0] $end
$var reg 4 g opcode[3:0] $end
$var reg 1 h zero $end
$var reg 32 i x[31:0] $end
$var reg 32 j aux[31:0] $end
$upscope $end
$scope module mul1 $end
$var reg 32 k a[31:0] $end
$var reg 32 l b[31:0] $end
$var reg 1 m op $end
$var reg 32 n high[31:0] $end
$var reg 32 o low[31:0] $end
$var reg 64 p s_x[63:0] $end
$upscope $end
$scope module re1 $end
$var reg 1 q clk $end
$var reg 1 r enable_read $end
$var reg 1 s enable_write $end
$var reg 32 t reg_input[31:0] $end
$var reg 32 u reg_output[31:0] $end
$var reg 32 v aux[31:0] $end
$upscope $end
$scope module re2 $end
$var reg 1 w clk $end
$var reg 1 x enable_read $end
$var reg 1 y enable_write $end
$var reg 32 z reg_input[31:0] $end
$var reg 32 { reg_output[31:0] $end
$var reg 32 | aux[31:0] $end
$upscope $end
$scope module re3 $end
$var reg 1 } clk $end
$var reg 1 !" enable_read $end
$var reg 1 "" enable_write $end
$var reg 32 #" reg_input[31:0] $end
$var reg 32 $" reg_output[31:0] $end
$var reg 32 %" aux[31:0] $end
$upscope $end
$scope module re4 $end
$var reg 1 &" clk $end
$var reg 1 '" enable_read $end
$var reg 1 (" enable_write $end
$var reg 32 )" reg_input[31:0] $end
$var reg 32 *" reg_output[31:0] $end
$var reg 32 +" aux[31:0] $end
$upscope $end
$scope module re5 $end
$var reg 1 ," clk $end
$var reg 1 -" enable_read $end
$var reg 1 ." enable_write $end
$var reg 32 /" reg_input[31:0] $end
$var reg 32 0" reg_output[31:0] $end
$var reg 32 1" aux[31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000000000010000001110110011000 !
b00000101101111111001101011100001 "
b11111111111101111110001001101000 #
b00000101101111111001101011100001 $
b00000000000010000001110110011000 %
b00000101101111111001101011100001 &
b1000 '
b1001 (
b1100 )
b00000101110001111011100001111001 *
b11111010001110000100011110000111 +
b11111010010010001000001010110111 ,
Z-
Z.
1/
b00000000000010000100001111110111 0
b00000000000000000111110110010001 1
12
b00000000000000000000000000000100 3
b00001101110111100001100111100111 4
U5
U6
U7
U8
U9
U:
b00000000000010000001110110011000 ;
b00000101101111111001101011100001 <
b11111111111101111110001001101000 =
b00000101101111111001101011100001 >
b00000000000010000001110110011000 ?
b00000101101111111001101011100001 @
b1000 A
b1001 B
b1100 C
b00000101110001111011100001111001 D
b11111010001110000100011110000111 E
b11111010010010001000001010110111 F
ZG
ZH
1I
b00000000000010000100001111110111 J
b00000000000000000111110110010001 K
1L
b00000000000000000000000000000100 M
b00001101110111100001100111100111 N
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU O
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU P
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU Q
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU R
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU S
b00000101110001111011100001111001 T
b11111010001110000100011110000111 U
b11111010010010001000001010110111 V
b00000000000000000000000000000100 W
b00001101110111100001100111100111 X
b00000000000010000001110110011000 Y
b00000101101111111001101011100001 Z
b1000 [
Z\
b00000101110001111011100001111001 ]
b00000101110001111011100001111001 ^
b11111111111101111110001001101000 _
b00000101101111111001101011100001 `
b1001 a
Zb
b11111010001110000100011110000111 c
b11111010001110000100011110000111 d
b00000000000010000001110110011000 e
b00000101101111111001101011100001 f
b1100 g
1h
b11111010010010001000001010110111 i
b11111010010010001000001010110111 j
b00000000000010000100001111110111 k
b00000000000000000111110110010001 l
1m
b00000000000000000000000000000100 n
b00001101110111100001100111100111 o
b0000000000000000000000000000010000001101110111100001100111100111 p
Uq
Ur
Us
b00000101110001111011100001111001 t
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU u
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU v
Uw
Ux
Uy
b11111010001110000100011110000111 z
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU {
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU |
U}
U!"
U""
b11111010010010001000001010110111 #"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU $"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU %"
U&"
U'"
U("
b00000000000000000000000000000100 )"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU *"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU +"
U,"
U-"
U."
b00001101110111100001100111100111 /"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 0"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 1"
#1000000
b00000000000000000000000000010111 !
b00000000000000000000000000000001 "
b00000000000000000000000000010111 #
b00000000000000000000000000000001 $
b00000101101111111001101011100001 %
b00000000000010000001110110011000 &
b0100 '
b0101 (
b1000 )
b00000000000000000000000000101110 *
b00000000000000000000000000001011 +
b00000101110001111011100001111001 ,
Z/
b11111111111101111011110000001001 0
b11111111111111111000001001101111 1
02
b00000000000000000000000000010111 ;
b00000000000000000000000000000001 <
b00000000000000000000000000010111 =
b00000000000000000000000000000001 >
b00000101101111111001101011100001 ?
b00000000000010000001110110011000 @
b0100 A
b0101 B
b1000 C
b00000000000000000000000000101110 D
b00000000000000000000000000001011 E
b00000101110001111011100001111001 F
ZI
b11111111111101111011110000001001 J
b11111111111111111000001001101111 K
0L
b00000000000000000000000000101110 T
b00000000000000000000000000001011 U
b00000101110001111011100001111001 V
b00000000000000000000000000010111 Y
b00000000000000000000000000000001 Z
b0100 [
b00000000000000000000000000101110 ]
b00000000000000000000000000101110 ^
b00000000000000000000000000010111 _
b00000000000000000000000000000001 `
b0101 a
b00000000000000000000000000001011 c
b00000000000000000000000000001011 d
b00000101101111111001101011100001 e
b00000000000010000001110110011000 f
b1000 g
Zh
b00000101110001111011100001111001 i
b00000101110001111011100001111001 j
b11111111111101111011110000001001 k
b11111111111111111000001001101111 l
0m
b00000000000000000000000000101110 t
b00000000000000000000000000001011 z
b00000101110001111011100001111001 #"
#2000000
