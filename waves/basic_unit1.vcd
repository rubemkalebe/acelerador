$date
  Tue Apr  5 04:14:17 2016
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 32 ! s_input_alu_1a[31:0] $end
$var reg 32 " s_input_alu_1b[31:0] $end
$var reg 32 # s_input_alu_2a[31:0] $end
$var reg 32 $ s_input_alu_2b[31:0] $end
$var reg 32 % s_input_alu_3a[31:0] $end
$var reg 32 & s_input_alu_3b[31:0] $end
$var reg 4 ' s_opcode_alu_1[3:0] $end
$var reg 4 ( s_opcode_alu_2[3:0] $end
$var reg 4 ) s_opcode_alu_3[3:0] $end
$var reg 32 * s_output_alu_1[31:0] $end
$var reg 32 + s_output_alu_2[31:0] $end
$var reg 32 , s_output_alu_3[31:0] $end
$var reg 1 - s_zero_alu_1 $end
$var reg 1 . s_zero_alu_2 $end
$var reg 1 / s_zero_alu_3 $end
$var reg 32 0 s_input_mul_1a[31:0] $end
$var reg 32 1 s_input_mul_1b[31:0] $end
$var reg 1 2 s_op_mul_1 $end
$var reg 64 3 s_output_mul_1[63:0] $end
$var reg 1 4 s_clk $end
$var reg 1 5 s_enable_read $end
$var reg 1 6 s_enable_write $end
$scope module basic_unit_0 $end
$var reg 1 7 clk $end
$var reg 1 8 enable_read $end
$var reg 1 9 enable_write $end
$var reg 32 : input_alu_1a[31:0] $end
$var reg 32 ; input_alu_1b[31:0] $end
$var reg 32 < input_alu_2a[31:0] $end
$var reg 32 = input_alu_2b[31:0] $end
$var reg 32 > input_alu_3a[31:0] $end
$var reg 32 ? input_alu_3b[31:0] $end
$var reg 4 @ opcode_alu_1[3:0] $end
$var reg 4 A opcode_alu_2[3:0] $end
$var reg 4 B opcode_alu_3[3:0] $end
$var reg 32 C output_alu_1[31:0] $end
$var reg 32 D output_alu_2[31:0] $end
$var reg 32 E output_alu_3[31:0] $end
$var reg 1 F zero_alu_1 $end
$var reg 1 G zero_alu_2 $end
$var reg 1 H zero_alu_3 $end
$var reg 32 I input_mul_1a[31:0] $end
$var reg 32 J input_mul_1b[31:0] $end
$var reg 1 K op_mul_1 $end
$var reg 64 L output_mul_1[63:0] $end
$var reg 32 M r1_out[31:0] $end
$var reg 32 N r2_out[31:0] $end
$var reg 32 O r3_out[31:0] $end
$var reg 64 P r4_out[63:0] $end
$var reg 32 Q s_output_alu_1[31:0] $end
$var reg 32 R s_output_alu_2[31:0] $end
$var reg 32 S s_output_alu_3[31:0] $end
$var reg 64 T s_output_mul_1[63:0] $end
$scope module alu1 $end
$var reg 32 U a[31:0] $end
$var reg 32 V b[31:0] $end
$var reg 4 W opcode[3:0] $end
$var reg 1 X zero $end
$var reg 32 Y x[31:0] $end
$var reg 32 Z aux[31:0] $end
$upscope $end
$scope module alu2 $end
$var reg 32 [ a[31:0] $end
$var reg 32 \ b[31:0] $end
$var reg 4 ] opcode[3:0] $end
$var reg 1 ^ zero $end
$var reg 32 _ x[31:0] $end
$var reg 32 ` aux[31:0] $end
$upscope $end
$scope module alu3 $end
$var reg 32 a a[31:0] $end
$var reg 32 b b[31:0] $end
$var reg 4 c opcode[3:0] $end
$var reg 1 d zero $end
$var reg 32 e x[31:0] $end
$var reg 32 f aux[31:0] $end
$upscope $end
$scope module mul1 $end
$var reg 32 g a[31:0] $end
$var reg 32 h b[31:0] $end
$var reg 1 i op $end
$var reg 64 j x[63:0] $end
$upscope $end
$scope module re1 $end
$var reg 1 k clk $end
$var reg 1 l enable_read $end
$var reg 1 m enable_write $end
$var reg 32 n reg_input[31:0] $end
$var reg 32 o reg_output[31:0] $end
$var reg 32 p aux[31:0] $end
$upscope $end
$scope module re2 $end
$var reg 1 q clk $end
$var reg 1 r enable_read $end
$var reg 1 s enable_write $end
$var reg 32 t reg_input[31:0] $end
$var reg 32 u reg_output[31:0] $end
$var reg 32 v aux[31:0] $end
$upscope $end
$scope module re3 $end
$var reg 1 w clk $end
$var reg 1 x enable_read $end
$var reg 1 y enable_write $end
$var reg 32 z reg_input[31:0] $end
$var reg 32 { reg_output[31:0] $end
$var reg 32 | aux[31:0] $end
$upscope $end
$scope module re4 $end
$var reg 1 } clk $end
$var reg 1 !" enable_read $end
$var reg 1 "" enable_write $end
$var reg 64 #" reg_input[63:0] $end
$var reg 64 $" reg_output[63:0] $end
$var reg 64 %" aux[63:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000000000010000001110110011000 !
b00000101101111111001101011100001 "
b11111111111101111110001001101000 #
b00000101101111111001101011100001 $
b00000000000010000001110110011000 %
b00000101101111111001101011100001 &
b1000 '
b1001 (
b1100 )
b00000101110001111011100001111001 *
b11111010001110000100011110000111 +
b11111010010010001000001010110111 ,
Z-
Z.
1/
b00000000000010000100001111110111 0
b00000000000000000111110110010001 1
12
b0000000000000000000000000000010000001101110111100001100111100111 3
U4
U5
U6
U7
U8
U9
b00000000000010000001110110011000 :
b00000101101111111001101011100001 ;
b11111111111101111110001001101000 <
b00000101101111111001101011100001 =
b00000000000010000001110110011000 >
b00000101101111111001101011100001 ?
b1000 @
b1001 A
b1100 B
b00000101110001111011100001111001 C
b11111010001110000100011110000111 D
b11111010010010001000001010110111 E
ZF
ZG
1H
b00000000000010000100001111110111 I
b00000000000000000111110110010001 J
1K
b0000000000000000000000000000010000001101110111100001100111100111 L
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU M
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU N
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU O
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU P
b00000101110001111011100001111001 Q
b11111010001110000100011110000111 R
b11111010010010001000001010110111 S
b0000000000000000000000000000010000001101110111100001100111100111 T
b00000000000010000001110110011000 U
b00000101101111111001101011100001 V
b1000 W
ZX
b00000101110001111011100001111001 Y
b00000101110001111011100001111001 Z
b11111111111101111110001001101000 [
b00000101101111111001101011100001 \
b1001 ]
Z^
b11111010001110000100011110000111 _
b11111010001110000100011110000111 `
b00000000000010000001110110011000 a
b00000101101111111001101011100001 b
b1100 c
1d
b11111010010010001000001010110111 e
b11111010010010001000001010110111 f
b00000000000010000100001111110111 g
b00000000000000000111110110010001 h
1i
b0000000000000000000000000000010000001101110111100001100111100111 j
Uk
Ul
Um
b00000101110001111011100001111001 n
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU o
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU p
Uq
Ur
Us
b11111010001110000100011110000111 t
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU u
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU v
Uw
Ux
Uy
b11111010010010001000001010110111 z
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU {
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU |
U}
U!"
U""
b0000000000000000000000000000010000001101110111100001100111100111 #"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU $"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU %"
#1000000
b00000000000000000000000000010111 !
b00000000000000000000000000000001 "
b00000000000000000000000000010111 #
b00000000000000000000000000000001 $
b00000101101111111001101011100001 %
b00000000000010000001110110011000 &
b0100 '
b0101 (
b1000 )
b00000000000000000000000000101110 *
b00000000000000000000000000001011 +
b00000101110001111011100001111001 ,
Z/
b11111111111101111011110000001001 0
b11111111111111111000001001101111 1
02
b00000000000000000000000000010111 :
b00000000000000000000000000000001 ;
b00000000000000000000000000010111 <
b00000000000000000000000000000001 =
b00000101101111111001101011100001 >
b00000000000010000001110110011000 ?
b0100 @
b0101 A
b1000 B
b00000000000000000000000000101110 C
b00000000000000000000000000001011 D
b00000101110001111011100001111001 E
ZH
b11111111111101111011110000001001 I
b11111111111111111000001001101111 J
0K
b00000000000000000000000000101110 Q
b00000000000000000000000000001011 R
b00000101110001111011100001111001 S
b00000000000000000000000000010111 U
b00000000000000000000000000000001 V
b0100 W
b00000000000000000000000000101110 Y
b00000000000000000000000000101110 Z
b00000000000000000000000000010111 [
b00000000000000000000000000000001 \
b0101 ]
b00000000000000000000000000001011 _
b00000000000000000000000000001011 `
b00000101101111111001101011100001 a
b00000000000010000001110110011000 b
b1000 c
Zd
b00000101110001111011100001111001 e
b00000101110001111011100001111001 f
b11111111111101111011110000001001 g
b11111111111111111000001001101111 h
0i
b00000000000000000000000000101110 n
b00000000000000000000000000001011 t
b00000101110001111011100001111001 z
#2000000
